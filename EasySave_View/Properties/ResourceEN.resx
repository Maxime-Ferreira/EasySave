<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="all_saveworks" xml:space="preserve">
    <value>All the saveworks</value>
  </data>
  <data name="btnChooseValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="btnChooseValidateDelete" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="btnCryptoValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="btnExtensionDelete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="btnPriorityExtensionDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="btnPriorityValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="btnValidate" xml:space="preserve">
    <value>Validate</value>
  </data>
  <data name="create_lbl" xml:space="preserve">
    <value>Savework's creation</value>
  </data>
  <data name="crypto_lbl" xml:space="preserve">
    <value>Choose your extension</value>
  </data>
  <data name="dest_lbl" xml:space="preserve">
    <value>Destination folder</value>
  </data>
  <data name="header_about" xml:space="preserve">
    <value>About us</value>
  </data>
  <data name="header_config" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="header_create" xml:space="preserve">
    <value>Create a savework</value>
  </data>
  <data name="header_delete" xml:space="preserve">
    <value>Delete a savework</value>
  </data>
  <data name="header_edit" xml:space="preserve">
    <value>Edit a savework</value>
  </data>
  <data name="header_english" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="header_french" xml:space="preserve">
    <value>French</value>
  </data>
  <data name="header_job" xml:space="preserve">
    <value>Choose your business software</value>
  </data>
  <data name="header_language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="header_logfile" xml:space="preserve">
    <value>Log file</value>
  </data>
  <data name="header_logs" xml:space="preserve">
    <value>Logs</value>
  </data>
  <data name="header_quit" xml:space="preserve">
    <value>Quit</value>
  </data>
  <data name="header_run" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="header_statefile" xml:space="preserve">
    <value>State file</value>
  </data>
  <data name="lblAbout" xml:space="preserve">
    <value>This project has been realized in the system programming project in third year's IT specialty class at CESI Bordeaux. Made By group 6 (Clément Courtembert Gaillard, Elouan Jeannot, Maxime Ferreira, Mathéo Berger).</value>
  </data>
  <data name="lblchoosedelete" xml:space="preserve">
    <value>Choose the savework you want to delete</value>
  </data>
  <data name="lblComing" xml:space="preserve">
    <value>Coming soon...</value>
  </data>
  <data name="lblExtension" xml:space="preserve">
    <value>Your extension is not in the list? You can fill it</value>
  </data>
  <data name="lblPriorityExtension" xml:space="preserve">
    <value>Insert a specific extension</value>
  </data>
  <data name="msgCreated" xml:space="preserve">
    <value>Your savework has been created</value>
  </data>
  <data name="msgDeleted" xml:space="preserve">
    <value>Your savework has been deleted</value>
  </data>
  <data name="msgExecuted" xml:space="preserve">
    <value>Your savework has been executed</value>
  </data>
  <data name="msgExtension" xml:space="preserve">
    <value>Your extension has been deleted</value>
  </data>
  <data name="msgPath" xml:space="preserve">
    <value>The path of your business software is the following one?</value>
  </data>
  <data name="name_lbl" xml:space="preserve">
    <value>Savework's name :</value>
  </data>
  <data name="priority_header" xml:space="preserve">
    <value>Priority file extensions</value>
  </data>
  <data name="priority_lbl" xml:space="preserve">
    <value>Choose your priority file extension</value>
  </data>
  <data name="Savework_to_run" xml:space="preserve">
    <value>Choose a savework to run</value>
  </data>
  <data name="sizeFile_header" xml:space="preserve">
    <value>Maximum file size for parallel transfer</value>
  </data>
  <data name="source_lbl" xml:space="preserve">
    <value>Source folder :</value>
  </data>
  <data name="txtBlckSoftName" xml:space="preserve">
    <value>EasySave soft</value>
  </data>
  <data name="txtDest" xml:space="preserve">
    <value>Choose the destination folder</value>
  </data>
  <data name="txtExtension" xml:space="preserve">
    <value>Your extension...</value>
  </data>
  <data name="txtName" xml:space="preserve">
    <value>Enter the name</value>
  </data>
  <data name="txtSource" xml:space="preserve">
    <value>Choose the source folder</value>
  </data>
  <data name="type_lbl" xml:space="preserve">
    <value>Type:</value>
  </data>
</root>